@model DomainProduct.Settings

@{ 
    var orderParam = Request.QueryString["order"] != null ? string.Concat("&order=", Request.QueryString["o"] != null ? Request.QueryString["order"].ToString() : string.Empty) : string.Empty;
    var viewParam = Request.QueryString["viewList"] != null ? string.Concat("&viewList=", Request.QueryString["viewList"] != null ? Request.QueryString["viewList"].ToString() : string.Empty) : string.Empty;

    var queryParameters = string.Concat(orderParam, viewParam);
}
<div class="ui pagination menu">
    @if (Model.HasPreviousPage)
    {
        <a class="item" href="@string.Concat(ViewData["Url"].ToString(), "?pageNumber=", Model.PageNumber - 1, queryParameters)">
            <i class="angle left icon"></i>
        </a>
    }
    else
    {
        <a class="disabled item" href="@string.Concat(ViewData["Url"].ToString(), "?pageNumber=", Model.PageNumber - 1, queryParameters)">
            <i class="angle left icon"></i>
        </a>
    }

    @for (int i = 0; i < Model.PageCount; i++)
    {
        if ((i+1) == Model.PageNumber)
        {
            <a class="active item">
                @(i+1)
            </a>
        }
        else
        {
        <a class="item" href="@string.Concat(ViewData["Url"].ToString(), "?pageNumber=", (i+1), queryParameters)">
            @(i+1)
        </a>
        }
    }

    @if (Model.HasNextPage)
    {
        <a class="item" href="@string.Concat(ViewData["Url"].ToString(), "?pageNumber=", Model.PageNumber + 1, queryParameters)">
            <i class="angle right icon"></i>
        </a>
    }
    else
    {
        <a class="disabled item" href="@string.Concat(ViewData["Url"].ToString(), "?pageNumber=", Model.PageNumber + 1, queryParameters)">
            <i class="angle right icon"></i>
        </a>
    }
</div>
